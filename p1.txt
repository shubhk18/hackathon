#!/bin/bash

# Check if the operation type is provided
if [[ $# -lt 1 ]]; then
    echo "Usage: $0 <import|export> [input_file] [output_dir]"
    exit 1
fi

# Get operation type
operation=$1

# Function for import operation
import_records() {
    input_file=$2      # The XML file with multiple ISO 20022 payment records
    output_dir=$3      # Directory where individual XML files will be copied
    delay=5            # Delay in seconds between each copy

    # Check if input_file and output_dir parameters are provided
    if [[ -z "$input_file" || -z "$output_dir" ]]; then
        echo "For the 'import' operation, please provide both <input_file> and <output_dir>."
        echo "Usage: $0 import <input_file> <output_dir>"
        exit 1
    fi

    # Create output directory if it doesn't exist
    mkdir -p "$output_dir"

    # Use csplit to split at <Document> tags
    echo "Splitting ISO 20022 payment records from $input_file..."

    # Split the input XML file at each <Document> tag
    csplit -z -f "$output_dir/payment_record_" "$input_file" '/<Document>/' '{*}'

    # Process each split file with a delay
    for record_file in "$output_dir"/payment_record_*; do
        # Verify if file was created
        if [[ -f "$record_file" ]]; then
            echo "File $(basename "$record_file") created successfully."
        else
            echo "Error: File $(basename "$record_file") was not created correctly."
        fi

        # Delay for MQ processing
        sleep "$delay"
    done

    echo "Import process completed."
}

# Function for export operation
export_records() {
    echo "Hello"
}

# Main logic based on operation
case $operation in
    import)
        # Ensure only `import`, `input_file`, and `output_dir` are provided
        if [[ $# -ne 3 ]]; then
            echo "Usage for 'import': $0 import <input_file> <output_dir>"
            exit 1
        fi
        import_records "$@"
        ;;
    export)
        # Ensure only `export` is provided
        if [[ $# -ne 1 ]]; then
            echo "Usage for 'export': $0 export"
            exit 1
        fi
        export_records
        ;;
    *)
        echo "Invalid operation: $operation"
        echo "Use 'import' to split XML records or 'export' to print hello."
        exit 1
        ;;
esac